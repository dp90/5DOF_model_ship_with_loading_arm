function q_n_dot = solve_statespace_vector(t_n, q_n, P, H)

% Create vector u, containing displacements at time n
u = q_n(1:length(q_n)/2);

% Create vector v, containing velocities at time n
v = q_n(length(q_n)/2+1:end);
% v = [v(1);v(2);0;0;0];

x1      = u(1);
y1      = u(2);
theta1  = u(3);
theta2  = u(4);
theta3  = u(5);
J1      = P.Jpp;
J2      = P.Jb;
J3      = P.J3;
m1      = P.Mpp;
m2      = P.Ml;
m3      = P.Mb;
k1      = P.k1;
k2      = P.k2;
k3      = P.k3;
k4      = P.k4;
k5      = P.k5;
c2      = P.c2;
c3      = P.c3;
g       = H.g;
c1      = c3;

    Hpp     = H.Hpp;
    Bpp     = H.Bpp;
    Mpp     = H.Mpp;
    Tpp     = H.Tpp;
    Lpp     = H.Lpp;
    H_0     = H.H_0;
    B_0     = H.B_0;
    a       = H.a;
    b       = H.b;
    Mb      = H.Mb;
    Ml      = H.Ml;
    Lc      = H.Lc;

    phi1 = atan((Hpp-Tpp)/(Bpp/2));
    phi2 = atan(Tpp/(Bpp/2));
    phi3 = atan((Hpp-Tpp)/(a));
    phi4 = atan(H_0/B_0);
    
    y5 = sin(phi1-theta1)*sqrt((Hpp-Tpp)^2+((1/2)*Bpp)^2)+y1;
    x5 = cos(phi1-theta1)*sqrt((Hpp-Tpp)^2+((1/2)*Bpp)^2)+x1;
    y6 = -sin(phi2+theta1)*sqrt(Tpp^2+((1/2)*Bpp)^2)+y1;
    x6 = cos(phi2+theta1)*sqrt(Tpp^2+((1/2)*Bpp)^2)+x1;
    y7 = -sin(phi2-theta1)*sqrt(Tpp^2+((1/2)*Bpp)^2)+y1;
    x7 = -cos(phi2-theta1)*sqrt(Tpp^2+((1/2)*Bpp)^2)+x1;
    y8 = sin(phi1+theta1)*sqrt((Hpp-Tpp)^2+((1/2)*Bpp)^2)+y1;
    x8 = -cos(phi1+theta1)*sqrt((Hpp-Tpp)^2+((1/2)*Bpp)^2)+x1;
    y9 = sin(phi3+theta1)*sqrt((Hpp-Tpp)^2+a^2)+y1;
    x9 = -cos(phi3+theta1)*sqrt((Hpp-Tpp)^2+a^2)+x1;
    y2 = sin(phi3-theta1)*sqrt((Hpp-Tpp)^2+a^2)+y1;
    x2 = cos(phi3-theta1)*sqrt((Hpp-Tpp)^2+a^2)+x1;
    x10 = sin(theta1)*(Hpp-Tpp+H_0)+x1;
    y10 = cos(theta1)*(Hpp-Tpp+H_0)+y1;
    x3 = cos(phi4-theta2)*sqrt(B_0^2+H_0^2)+x2;
    y3 = sin(phi4-theta2)*sqrt(B_0^2+H_0^2)+y2;
    x4 = -Lc*sin(theta3)+x3;
    y4 = -Lc*cos(theta3)+y3;

theta1dot = v(3);
theta2dot = v(4);
theta3dot = v(5);
y1dot     = v(2);

Fvec = compute_loads(t_n, H, x4, x5);

% na verandering potentiële energie
% M = [0.10e1 * m1 + 0.10e1 * m2 + 0.10e1 * m3 0 -0.2567394095e-2 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.400e2 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) -0.250e2 * m2 * cos(theta3); 0 0.10e1 * m1 + 0.10e1 * m2 + 0.10e1 * m3 -0.2567394095e-2 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.400e2 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.250e2 * m2 * sin(theta3); -0.2567394095e-2 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.2567394095e-2 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) 0.10e1 * J1 + 0.1471311332e3 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1333333333e3 * m3 + 0.10e1 * m3 * (0.4780874875e3 + (0.10e2 + 0.5e1 * sqrt(0.7e1)) ^ 2) 0.1026957638e0 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.1026957638e0 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.6418485238e-1 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(theta3) - 0.6418485238e-1 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(theta3); -0.400e2 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) -0.400e2 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.1026957638e0 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.1026957638e0 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.16000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) ^ 2 + 0.16000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) ^ 2 + 0.10e1 * J2 0.10000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) * cos(theta3) - 0.10000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) * sin(theta3); -0.250e2 * m2 * cos(theta3) 0.250e2 * m2 * sin(theta3) 0.6418485238e-1 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(theta3) - 0.6418485238e-1 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(theta3) 0.10000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) * cos(theta3) - 0.10000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) * sin(theta3) 0.6250e3 * m2 * cos(theta3) ^ 2 + 0.6250e3 * m2 * sin(theta3) ^ 2];
% Fr = [-0.10e1 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) + 0.2567394095e-2 * m3 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.10e1 * k1 * (x1 - 0.1283697047e-2 * cos(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2) - 0.10e1 * k4 * (x1 - 0.1283697047e-2 * cos(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2); -0.10e1 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) - 0.2567394095e-2 * m3 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.10e1 * k2 * (y1 + 0.1283697047e-2 * sin(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) - 0.10e1 * k3 * (y1 - 0.1283697047e-2 * sin(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) - m3 * g - m1 * g - m2 * g; 0.2567394095e-2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.2567394095e-2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.1283697048e-2 * k1 * (x1 - 0.1283697047e-2 * cos(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2) * sin(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) - 0.1283697048e-2 * k2 * (y1 + 0.1283697047e-2 * sin(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) * cos(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.1283697048e-2 * k3 * (y1 - 0.1283697047e-2 * sin(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) * cos(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) - 0.1283697048e-2 * k4 * (x1 - 0.1283697047e-2 * cos(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2) * sin(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.2567394095e-2 * m3 * g * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.2567394095e-2 * m2 * g * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8); 0.400e2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.400e2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.20e2 * m3 * g * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.400e2 * k5 * (0.40e2 * cos(-asin(0.3e1 / 0.4e1) + theta2) - 0.10e2 * sqrt(0.7e1)) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.40e2 * m2 * g * cos(-asin(0.3e1 / 0.4e1) + theta2); 0.250e2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * cos(theta3) - 0.250e2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * sin(theta3) - 0.25e2 * m2 * g * sin(theta3)];

% na toevoeging demping
% M = [0 0.10e1 * m1 + 0.10e1 * m2 + 0.10e1 * m3 -0.2567394095e-2 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.400e2 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.250e2 * m2 * sin(theta3); 0 0 0 0 0; -0.2567394095e-2 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.2567394095e-2 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) 0.10e1 * J1 + 0.1471311332e3 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1333333333e3 * m3 + 0.10e1 * m3 * (0.4780874875e3 + (0.10e2 + 0.5e1 * sqrt(0.7e1)) ^ 2) 0.1026957638e0 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.1026957638e0 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) 0.6418485238e-1 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(theta3) - 0.6418485238e-1 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(theta3); -0.250e2 * m2 * cos(theta3) 0.250e2 * m2 * sin(theta3) 0.6418485238e-1 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(theta3) - 0.6418485238e-1 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(theta3) 0.10000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) * cos(theta3) - 0.10000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) * sin(theta3) 0.6250e3 * m2 * cos(theta3) ^ 2 + 0.6250e3 * m2 * sin(theta3) ^ 2; 0.10e1 * m1 + 0.10e1 * m2 + 0.10e1 * m3 0 -0.2567394095e-2 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.400e2 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) -0.250e2 * m2 * cos(theta3)];
% Fr = [-0.10e1 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) - 0.2567394095e-2 * m3 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.10e1 * k2 * (y1 + 0.1283697047e-2 * sin(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) - 0.10e1 * k3 * (y1 - 0.1283697047e-2 * sin(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) - m3 * g - m1 * g - m2 * g; -EOM4; 0.2567394095e-2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.2567394095e-2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.1283697048e-2 * k1 * (x1 - 0.1283697047e-2 * cos(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2) * sin(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) - 0.1283697048e-2 * k2 * (y1 + 0.1283697047e-2 * sin(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) * cos(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.1283697048e-2 * k3 * (y1 - 0.1283697047e-2 * sin(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.6865211810e1) * cos(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) - 0.1283697048e-2 * k4 * (x1 - 0.1283697047e-2 * cos(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2) * sin(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.2567394095e-2 * m3 * g * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.2567394095e-2 * m2 * g * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8); 0.250e2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * cos(theta3) - 0.250e2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * sin(theta3) - 0.25e2 * m2 * g * sin(theta3); -0.10e1 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) + 0.2567394095e-2 * m3 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.10e1 * k1 * (x1 - 0.1283697047e-2 * cos(-atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2) - 0.10e1 * k4 * (x1 - 0.1283697047e-2 * cos(atan(0.5348e4 / 0.19475e5) + theta1) * sqrt(0.407876729e9) + 0.25e2)];

% Final Solution
M = [0.10e1 * m1 + 0.10e1 * m2 + 0.10e1 * m3 0 -0.2567394095e-2 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.400e2 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) -0.250e2 * m2 * cos(theta3); 0 0.10e1 * m1 + 0.10e1 * m2 + 0.10e1 * m3 -0.2567394095e-2 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.400e2 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.250e2 * m2 * sin(theta3); -0.2567394095e-2 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) -0.2567394095e-2 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.2567394095e-2 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) 0.10e1 * J1 + 0.1471311332e3 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m3 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1471311332e3 * m3 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) ^ 2 + 0.1333333333e3 * m3 + 0.10e1 * m3 * (0.4780874875e3 + (0.10e2 + 0.5e1 * sqrt(0.7e1)) ^ 2) 0.1026957638e0 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.1026957638e0 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.6418485238e-1 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(theta3) - 0.6418485238e-1 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(theta3); -0.400e2 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) -0.400e2 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.1026957638e0 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.1026957638e0 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(-asin(0.3e1 / 0.4e1) + theta2) 0.16000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) ^ 2 + 0.16000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) ^ 2 + 0.5333333334e3 * m3 0.10000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) * cos(theta3) - 0.10000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) * sin(theta3); -0.250e2 * m2 * cos(theta3) 0.250e2 * m2 * sin(theta3) 0.6418485238e-1 * m2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * cos(theta3) - 0.6418485238e-1 * m2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) * sin(theta3) 0.10000e4 * m2 * sin(-asin(0.3e1 / 0.4e1) + theta2) * cos(theta3) - 0.10000e4 * m2 * cos(-asin(0.3e1 / 0.4e1) + theta2) * sin(theta3) 0.6250e3 * m2 * cos(theta3) ^ 2 + 0.6250e3 * m2 * sin(theta3) ^ 2];
Fr = [-0.10e1 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) + 0.2567394095e-2 * m3 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.10e1 * k1 * (x1 + 0.3209242619e-1 * cos(0.2025743052e0 + theta1) * sqrt(0.632441e6) - 0.25e2) - 0.10e1 * k4 * (x1 + 0.25e2 - 0.3209242619e-1 * cos(-0.2025743052e0 + theta1) * sqrt(0.632441e6)); -0.10e1 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) - 0.2567394095e-2 * m3 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - c1 * (y1dot + 0.3209242619e-1 * theta1dot * cos(-0.2025743052e0 + theta1) * sqrt(0.632441e6)) - c1 * (y1dot - 0.3209242619e-1 * theta1dot * cos(0.2025743052e0 + theta1) * sqrt(0.632441e6)) - 0.10e1 * k2 * (y1 + 0.5134788190e1 - 0.3209242619e-1 * sin(0.2025743052e0 + theta1) * sqrt(0.632441e6)) - 0.10e1 * k3 * (y1 + 0.5134788190e1 + 0.3209242619e-1 * sin(-0.2025743052e0 + theta1) * sqrt(0.632441e6)) - m3 * g - m1 * g - m2 * g; 0.2567394095e-2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.2567394095e-2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.3209242619e-1 * c1 * (y1dot + 0.3209242619e-1 * theta1dot * cos(-0.2025743052e0 + theta1) * sqrt(0.632441e6)) * cos(-0.2025743052e0 + theta1) * sqrt(0.632441e6) + 0.3209242619e-1 * c1 * (y1dot - 0.3209242619e-1 * theta1dot * cos(0.2025743052e0 + theta1) * sqrt(0.632441e6)) * cos(0.2025743052e0 + theta1) * sqrt(0.632441e6) + 0.3209242619e-1 * k1 * (x1 + 0.3209242619e-1 * cos(0.2025743052e0 + theta1) * sqrt(0.632441e6) - 0.25e2) * sin(0.2025743052e0 + theta1) * sqrt(0.632441e6) + 0.3209242619e-1 * k2 * (y1 + 0.5134788190e1 - 0.3209242619e-1 * sin(0.2025743052e0 + theta1) * sqrt(0.632441e6)) * cos(0.2025743052e0 + theta1) * sqrt(0.632441e6) - 0.3209242619e-1 * k3 * (y1 + 0.5134788190e1 + 0.3209242619e-1 * sin(-0.2025743052e0 + theta1) * sqrt(0.632441e6)) * cos(-0.2025743052e0 + theta1) * sqrt(0.632441e6) - 0.3209242619e-1 * k4 * (x1 + 0.25e2 - 0.3209242619e-1 * cos(-0.2025743052e0 + theta1) * sqrt(0.632441e6)) * sin(-0.2025743052e0 + theta1) * sqrt(0.632441e6) + 0.2567394095e-2 * m3 * g * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.2567394095e-2 * m2 * g * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8); 0.400e2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.400e2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.20e2 * m3 * g * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.400e2 * k5 * (0.40e2 * cos(-asin(0.3e1 / 0.4e1) + theta2) - 0.10e2 * sqrt(0.7e1)) * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.40e2 * m2 * g * cos(-asin(0.3e1 / 0.4e1) + theta2); 0.250e2 * m2 * (-0.2567394095e-2 * theta1dot ^ 2 * cos(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) - 0.40e2 * theta2dot ^ 2 * cos(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * sin(theta3)) * cos(theta3) - 0.250e2 * m2 * (0.2567394095e-2 * theta1dot ^ 2 * sin(-atan(0.2674e4 / 0.3895e4) + theta1) * sqrt(0.22321301e8) + 0.40e2 * theta2dot ^ 2 * sin(-asin(0.3e1 / 0.4e1) + theta2) + 0.25e2 * theta3dot ^ 2 * cos(theta3)) * sin(theta3) - 0.25e2 * m2 * g * sin(theta3)];

% Calculate vector a, containing accelerations at time n (from u, v, M, C, K, and f) 
a = mldivide(M,(Fvec + Fr));
%a = [a(1);a(2);0;0;0];

% Combine velocity and acceleration vectors in derivative of state vector
q_n_dot = [v; a];



end